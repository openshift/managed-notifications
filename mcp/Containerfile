# Alternative Containerfile that downloads model and builds embeddings at runtime
# This reduces image size significantly but adds 2-5 minutes to startup time

FROM python:3.13-slim

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /usr/local/bin/

# Set working directory
WORKDIR /app
ENV UV_NO_CACHE=1

# Copy all source files
COPY pyproject.toml ./
COPY uv.lock ./

# Install dependencies and project
RUN uv sync --frozen --no-dev

# Copy notification templates and scripts (embeddings built at runtime)
COPY scripts/ ./scripts/
COPY managed-notifications/ ./managed-notifications/

# Set environment variables for MCP server
ENV HOST=0.0.0.0
ENV PORT=8000
ENV HF_HOME=/tmp/huggingface
ENV TRANSFORMERS_CACHE=/tmp/huggingface

# Copy mcp server code
COPY main.py ./

# Create startup script that builds embeddings and starts server
# Make /app writable so embeddings can be built at runtime
RUN echo '#!/bin/sh\n\
echo "Building embeddings database (this may take 2-5 minutes)..."\n\
uv run --no-sync scripts/build_embeddings.py\n\
echo "Embeddings built, starting MCP server..."\n\
exec uv run --no-sync main.py' > /app/start.sh && \
    chmod 755 /app/start.sh && \
    chmod 777 /app

# Expose port for MCP server
EXPOSE 8000

# Default command
CMD ["/app/start.sh"]
